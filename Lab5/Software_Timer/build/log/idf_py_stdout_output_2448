[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Admin\Desktop\Document\231\Embedded_System\Lab\Lab\Lab5\Software_Timer\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/Admin/Desktop/Document/231/Embedded_System/Lab/Lab/Lab5/Software_Timer/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/Software_timer.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable Software_Timer.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/Admin/Desktop/Document/231/Embedded_System/Lab/Lab/Lab5/Software_Timer/build/Software_Timer.bin
[7/8] cmd.exe /C "cd /D C:\Users\Admin\Desktop\Document\231\Embedded_System\Lab\Lab\Lab5\Software_Timer\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Admin/Desktop/Document/231/Embedded_System/Lab/Lab/Lab5/Software_Timer/build/partition_table/partition-table.bin C:/Users/Admin/Desktop/Document/231/Embedded_System/Lab/Lab/Lab5/Software_Timer/build/Software_Timer.bin"
Software_Timer.bin binary size 0x2b5e0 bytes. Smallest app partition is 0x100000 bytes. 0xd4a20 bytes (83%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.1.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.1.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Admin/Desktop/Document/231/Embedded_System/Lab/Lab/Lab5/Software_Timer/build -P C:/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM8 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 Software_Timer.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev2
Serial port COM8
Connecting...............
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 24:d7:eb:14:10:80
Uploading stub...

A serial exception error occurred: Cannot configure port, something went wrong. Original message: OSError(22, 'A device which does not exist was specified.', None, 433)
Note: This error originates from pySerial. It is likely not a problem with esptool, but with the hardware connection or drivers.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html
FAILED: CMakeFiles/flash C:/Users/Admin/Desktop/Document/231/Embedded_System/Lab/Lab/Lab5/Software_Timer/build/CMakeFiles/flash 
cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.1.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.1.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/Admin/Desktop/Document/231/Embedded_System/Lab/Lab/Lab5/Software_Timer/build -P C:/Espressif/frameworks/esp-idf-v5.1.1/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
